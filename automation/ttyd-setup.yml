---
# Install and configure ttyd web terminal for homelab
- name: Setup ttyd web terminal
  hosts: localhost
  connection: local
  gather_facts: yes
  
  vars:
    ttyd_port: 7681
    ttyd_interface: "127.0.0.1"  # localhost-only for security
    ttyd_user: "{{ ansible_user }}"
    enable_tailscale_serve: true  # Enable Tailscale access
    
  tasks:
    - name: Install ttyd via Homebrew
      community.general.homebrew:
        name: ttyd
        state: present
      register: ttyd_install
      
    - name: Check if ttyd is installed
      command: which ttyd
      register: ttyd_path
      changed_when: false
      
    - name: Display ttyd installation path
      debug:
        msg: "ttyd installed at: {{ ttyd_path.stdout }}"
        
    - name: Create LaunchAgents directory
      file:
        path: "{{ ansible_env.HOME }}/Library/LaunchAgents"
        state: directory
        mode: '0755'
        
    - name: Create ttyd launchd service plist
      template:
        src: ttyd.plist.j2
        dest: "{{ ansible_env.HOME }}/Library/LaunchAgents/com.homelab.ttyd.plist"
        mode: '0644'
      
    - name: Load ttyd service
      command: launchctl load {{ ansible_env.HOME }}/Library/LaunchAgents/com.homelab.ttyd.plist
      register: load_result
      changed_when: load_result.rc == 0
      failed_when: load_result.rc != 0 and "already loaded" not in load_result.stderr
      
    - name: Start ttyd service
      command: launchctl start com.homelab.ttyd
      register: start_result
      changed_when: start_result.rc == 0
      failed_when: start_result.rc != 0 and "already started" not in start_result.stderr
      
    - name: Wait for ttyd to start
      wait_for:
        host: "{{ ttyd_interface }}"
        port: "{{ ttyd_port }}"
        timeout: 10
      
    - name: Check ttyd status
      uri:
        url: "http://{{ ttyd_interface }}:{{ ttyd_port }}"
        method: GET
        status_code: 200
      register: ttyd_status
      
    # Tailscale Serve Configuration
    - name: Check if Tailscale is installed
      command: which tailscale
      register: tailscale_path
      changed_when: false
      failed_when: false
      when: enable_tailscale_serve | default(false)
      
    - name: Check Tailscale status
      command: tailscale status --json
      register: tailscale_status
      changed_when: false
      failed_when: false
      when: enable_tailscale_serve | default(false) and tailscale_path.rc == 0
      
    - name: Parse Tailscale status
      set_fact:
        tailscale_running: "{{ (tailscale_status.stdout | from_json).BackendState == 'Running' }}"
      when: enable_tailscale_serve | default(false) and tailscale_path.rc == 0 and tailscale_status.rc == 0
      
    - name: Stop existing Tailscale serve for ttyd
      command: tailscale serve reset
      register: tailscale_stop
      changed_when: tailscale_stop.rc == 0
      failed_when: false
      when: enable_tailscale_serve | default(false) and tailscale_running | default(false)
      
    - name: Configure Tailscale Serve for ttyd
      command: tailscale serve --bg 7681
      register: tailscale_serve
      changed_when: tailscale_serve.rc == 0
      when: enable_tailscale_serve | default(false) and tailscale_running | default(false)
      
    - name: Get Tailscale machine name
      command: tailscale status --json
      register: tailscale_info
      changed_when: false
      when: enable_tailscale_serve | default(false) and tailscale_running | default(false)
      
    - name: Set Tailscale access URL
      set_fact:
        tailscale_url: "https://{{ (tailscale_info.stdout | from_json).Self.DNSName | regex_replace('\\.$', '') }}:{{ ttyd_port }}"
      when: enable_tailscale_serve | default(false) and tailscale_running | default(false) and tailscale_info is defined
      
    - name: Display access information
      debug:
        msg: |
          ttyd web terminal setup complete!
          
          Local Access: http://{{ ttyd_interface }}:{{ ttyd_port }}
          {% if enable_tailscale_serve | default(false) and tailscale_running | default(false) %}
          Tailscale Access: {{ tailscale_url | default('Configuration pending...') }}
          Security: Localhost + Tailscale tunnel (most secure)
          {% else %}
          Security: Localhost-only, no external exposure
          {% endif %}
          
          Service: com.homelab.ttyd
          Logs: /tmp/ttyd.log and /tmp/ttyd.error.log
          
          Service Management:
          - Start: launchctl start com.homelab.ttyd
          - Stop:  launchctl stop com.homelab.ttyd
          - Reload: launchctl unload ~/Library/LaunchAgents/com.homelab.ttyd.plist && launchctl load ~/Library/LaunchAgents/com.homelab.ttyd.plist
          
          Status: {{ 'Running [OK]' if ttyd_status.status == 200 else 'Not responding [ERROR]' }}

  handlers:
    - name: restart ttyd service
      block:
        - name: Stop ttyd service
          command: launchctl stop com.homelab.ttyd
          ignore_errors: yes
          
        - name: Unload ttyd service
          command: launchctl unload {{ ansible_env.HOME }}/Library/LaunchAgents/com.homelab.ttyd.plist
          ignore_errors: yes
          
        - name: Load ttyd service
          command: launchctl load {{ ansible_env.HOME }}/Library/LaunchAgents/com.homelab.ttyd.plist
          
        - name: Start ttyd service
          command: launchctl start com.homelab.ttyd