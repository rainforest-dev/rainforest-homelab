#!/bin/bash
# Ansible Version Manager for Homelab

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd "$SCRIPT_DIR"

# Check if Ansible collections are installed
if [ ! -d ~/.ansible/collections/ansible_collections/kubernetes ]; then
    echo "üì¶ Installing required Ansible collections..."
    ansible-galaxy collection install -r requirements.yml
fi

case "${1:-check}" in
    "check"|"")
        echo "üîç Checking all service versions with Ansible..."
        ansible-playbook upgrade.yml --tags check
        ;;
    "manual")
        echo "üìã Showing manual upgrade instructions..."
        ansible-playbook upgrade.yml --tags check,upgrade
        ;;
    "setup")
        echo "üì¶ Setting up Ansible collections..."
        ansible-galaxy collection install -r requirements.yml
        echo "‚úÖ Setup complete!"
        ;;
    "help"|"-h"|"--help")
        echo "Homelab Version Manager (Check-Only Mode)"
        echo ""
        echo "Usage:"
        echo "  ./upgrade setup         # Install Ansible collections"
        echo "  ./upgrade               # Check versions"
        echo "  ./upgrade check         # Check versions" 
        echo "  ./upgrade manual        # Show manual upgrade commands"
        echo ""
        echo "Available services to monitor:"
        echo "  - open-webui"
        echo "  - flowise"
        echo "  - homepage"
        echo "  - postgresql"
        echo "  - n8n"
        echo "  - calibre-web"
        echo ""
        echo "Examples:"
        echo "  ./upgrade               # Check what needs upgrading"
        echo "  ./upgrade manual        # Get upgrade commands"
        echo ""
        echo "Safety: This script only checks versions."
        echo "Use 'manual' to get safe upgrade commands."
        ;;
    *)
        echo "‚ùå Unknown option: $1"
        echo "Use './upgrade help' for usage information."
        echo "This script only checks versions for safety."
        echo "Use './upgrade manual' to get upgrade commands."
        ;;
esac